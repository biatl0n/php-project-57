<?php

namespace Tests\Feature;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;
use App\Models\User;
use App\Models\Task;
use App\Models\TaskStatus;

class TaskTest extends TestCase
{
    /**
     * A basic feature test example.
     */
    use RefreshDatabase;

    public function setUP(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        Task::factory()->count(2)->make();
    }

    public function testDestroyWithOwnerAuth()
    {
        $user = User::factory()->create();
        $task = Task::factory()->create(['created_by_id' => $user->id]);

        $response = $this->actingAs($user)->delete(route('tasks.destroy', [$task]));
        $response->assertSessionHasNoErrors();
        $response->assertRedirect(route('tasks.index'));

        $this->assertDatabaseMissing('tasks', $task->only('id'));
    }

    public function testDestroyWithAlienAuth()
    {
        $alienUser = User::factory()->create();
        $user = User::factory()->create();
        $task = Task::factory()->create(['created_by_id' => $user->id]);

        $response = $this->actingAs($alienUser)->delete(route('tasks.destroy', [$task]));
        $response->assertSessionHasNoErrors();
        $response->status(403);

        $this->assertDatabaseHas('tasks', $task->only('id'));
    }

    public function testDestroyWithoutAuth()
    {
        $task = Task::factory()->create();

        $response = $this->delete(route('tasks.destroy', [$task]));
        $response->assertSessionHasNoErrors();
        $response->assertStatus(403);

        $this->assertDatabaseHas('tasks', $task->only('id'));
    }
}
